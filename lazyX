#!/usr/bin/python

import os
import sys
import subprocess
import zipfile
import re
import argparse


'''
lazyX is a small tool to automate the extraction, conversion of dex files
to jar files and decompiling of class files using dex2jar and cfr!


Adjust the following two lines to the directory of the dex2jar
and the Jar file of the cfr you have downloaded
'''
name_of_the_DEX2JAR_directory = "dex-tools-2.1-SNAPSHOT"
name_of_the_cfr_jar = "cfr-0.149.jar"



cwd = os.path.dirname(os.path.realpath(__file__))
dexDir = cwd  + "/" + name_of_the_DEX2JAR_directory
cfrDir = cwd + "/" + name_of_the_cfr_jar
FNULL = open(os.devnull, 'w')


'''
Call the dex2jar on a dex file
'''
def dex2jar(dexDir, xpath, infile, outfile):
	subprocess.call(['sh', dexDir + "/d2j-dex2jar.sh", xpath + '/' + infile, '-o', xpath + '/' + outfile, '-f'])

'''
Call cfr the jar file generated by dex2jar
'''
def cfr(dexDir, xpath, srcpath, jar):
	subprocess.call(['java','-Xms512m', '-Xmx1024m', '-jar', cfrDir, xpath + '/' + jar, '--outputdir', srcpath, '--silent', 'true', '--caseinsensitivefs', 'true'], stdout=FNULL)

parser = argparse.ArgumentParser(description='Crack open an apk the lazy way.')
parser.add_argument('apkfile', help='your apk')
args = parser.parse_args()
if not args.apkfile.endswith((".apk")):
	print("File is not an apk")
	sys.exit(0)

xpath = os.path.splitext(os.path.basename(args.apkfile))[0]
srcpath = xpath + "/src"


'''
Extract the apk
'''
try:
	zip_ref = zipfile.ZipFile(args.apkfile, 'r')
	zip_ref.extractall(xpath)
	zip_ref.close()
except IOError as e:
	print("Error extracting apk: " + str(e))
	sys.exit(0)


'''
Iterate over all the extracted files to find dex files
'''
for root, dirs, files in os.walk(xpath):
	for file in files:
		if file.endswith((".dex")):
			jar = os.path.splitext(file)[0] + ".jar"

			try:
				print("dex2jar ----> Converting...")
				dex2jar(dexDir, xpath, file, jar)
			except Exception as e:
				print('Something went wrong while DEX2JAR was converting! : '+ str(e))
				next
			try:
				print("cfr ----> Decompiling...")

				cfr(dexDir, xpath, srcpath, jar)
			except Exception as e:
				print('Something went wrong while CFR was decompiling! : ' + str(e))

print("Completed!")
